client is WIP, as libasound is required

--- origsrc/spice-0.11.0/client/threads.cpp	2012-06-12 09:55:15.000000000 -0500
+++ src/spice-0.11.0/client/threads.cpp	2012-07-01 17:11:59.792081200 -0500
@@ -70,6 +70,7 @@ static inline void rel_time(struct times
     time.tv_nsec = long(delta_nano % (1000 * 1000 * 1000));
 }
 
+#ifndef __CYGWIN__
 void Lock::timed_lock(uint64_t timout_nano)
 {
     struct timespec time;
@@ -85,6 +86,7 @@ void Lock::timed_lock(uint64_t timout_na
     }
     _locked = true;
 }
+#endif
 
 Condition::Condition()
 {
--- origsrc/spice-0.11.0/client/utils.h	2012-06-12 09:55:15.000000000 -0500
+++ src/spice-0.11.0/client/utils.h	2012-07-01 17:10:33.983957900 -0500
@@ -19,6 +19,7 @@
 #define _H_UTILS
 
 #include "common.h"
+#include <stdarg.h>
 #include <spice/error_codes.h>
 #include <spice/macros.h>
 
--- origsrc/spice-0.11.0/client/x11/platform.cpp	2012-06-12 09:55:15.000000000 -0500
+++ src/spice-0.11.0/client/x11/platform.cpp	2012-07-01 17:28:09.915433500 -0500
@@ -36,12 +36,14 @@
 #include <sys/socket.h>
 #include <sys/resource.h>
 #include <sys/types.h>
+#ifdef __linux__
 #include <sys/syscall.h>
+#endif
 #include <sys/stat.h>
 #include <unistd.h>
 #include <fcntl.h>
 #include <set>
-#include <values.h>
+#include <limits.h>
 #include <signal.h>
 #include <sys/shm.h>
 #ifdef HAVE_SYS_TIME_H
@@ -79,6 +81,10 @@
 #define USE_XINERAMA_1_0
 #endif
 
+#ifdef __CYGWIN__
+extern "C" unsigned long pthread_getsequence_np (pthread_t *);
+#endif
+
 static Display* x_display = NULL;
 static bool x_shm_avail = false;
 static XVisualInfo **vinfo = NULL;
@@ -582,7 +588,12 @@ uint64_t Platform::get_process_id()
 
 uint64_t Platform::get_thread_id()
 {
+#ifdef __CYGWIN__
+    pthread_t thr = pthread_self();
+    return uint64_t(pthread_getsequence_np(&thr);
+#else
     return uint64_t(syscall(SYS_gettid));
+#endif
 }
 
 void Platform::error_beep()
@@ -644,7 +655,13 @@ void Platform::set_thread_priority(void*
         THROW("invalid priority %d", in_priority);
     }
 
+#ifdef __CYGWIN__
+    pthread_t thr = pthread_self();
+    pid_t tid = pthread_getsequence_np(&thr);
+#else
     pid_t tid = syscall(SYS_gettid);
+#endif
+
     if (setpriority(PRIO_PROCESS, tid, priority) == -1) {
         DBG(0, "setpriority failed %s", strerror(errno));
     }
@@ -1464,7 +1481,7 @@ void MultyMonScreen::restore()
 SpicePoint MultyMonScreen::get_trans_top_left()
 {
     SpicePoint position;
-    position.y = position.x = MAXINT;
+    position.y = position.x = INT_MAX;
 
     XMonitorsList::iterator iter = _monitors.begin();
     for (; iter != _monitors.end(); iter++) {
@@ -1478,7 +1495,7 @@ SpicePoint MultyMonScreen::get_trans_top
 SpicePoint MultyMonScreen::get_trans_bottom_right()
 {
     SpicePoint position;
-    position.y = position.x = MININT;
+    position.y = position.x = INT_MIN;
 
     XMonitorsList::iterator iter = _monitors.begin();
     for (; iter != _monitors.end(); iter++) {
--- origsrc/spice-0.11.0/configure.ac	2012-06-12 09:55:28.000000000 -0500
+++ src/spice-0.11.0/configure.ac	2012-07-01 02:15:16.647305900 -0500
@@ -102,7 +102,7 @@ case "$host" in
     ;;
 esac
 AC_MSG_RESULT([$platform_win32])
-if test "$platform_win32" = yes; then
+if test "$os_win32" = yes; then
   red_target=windows
 else
   red_target=x11
@@ -456,7 +456,7 @@ error Need GCC 4.0 for visibility
 int main () { return 0; }
 ])], have_gcc4=yes)
 
-if test "x$have_gcc4" = "xyes" && test ! "$os_win32" = "yes" ; then
+if test "x$have_gcc4" = "xyes" && test ! "$platform_win32" = "yes" ; then
    VISIBILITY_HIDDEN_CFLAGS="-fvisibility=hidden"
 fi
 AC_MSG_RESULT($have_gcc4)
